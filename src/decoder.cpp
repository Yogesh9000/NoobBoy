#include "decoder.hpp"
#include <format>


void Decoder::DecodeAndExecute(uint8_t opcode, CpuState &state, Bus &bus, Executor &executor)
{
  switch (opcode)
  {
    case 0x00: executor.Execute<0x00>(state, bus); break;
    case 0x01: executor.Execute<0x01>(state, bus); break;
    case 0x02: executor.Execute<0x02>(state, bus); break;
    case 0x03: executor.Execute<0x03>(state, bus); break;
    case 0x04: executor.Execute<0x04>(state, bus); break;
    case 0x05: executor.Execute<0x05>(state, bus); break;
    case 0x06: executor.Execute<0x06>(state, bus); break;
    case 0x07: executor.Execute<0x07>(state, bus); break;
    case 0x08: executor.Execute<0x08>(state, bus); break;
    case 0x09: executor.Execute<0x09>(state, bus); break;
    case 0x0A: executor.Execute<0x0A>(state, bus); break;
    case 0x0B: executor.Execute<0x0B>(state, bus); break;
    case 0x0C: executor.Execute<0x0C>(state, bus); break;
    case 0x0D: executor.Execute<0x0D>(state, bus); break;
    case 0x0E: executor.Execute<0x0E>(state, bus); break;
    case 0x0F: executor.Execute<0x0F>(state, bus); break;
    case 0x10: executor.Execute<0x10>(state, bus); break;
    case 0x11: executor.Execute<0x11>(state, bus); break;
    case 0x12: executor.Execute<0x12>(state, bus); break;
    case 0x13: executor.Execute<0x13>(state, bus); break;
    case 0x14: executor.Execute<0x14>(state, bus); break;
    case 0x15: executor.Execute<0x15>(state, bus); break;
    case 0x16: executor.Execute<0x16>(state, bus); break;
    case 0x17: executor.Execute<0x17>(state, bus); break;
    case 0x18: executor.Execute<0x18>(state, bus); break;
    case 0x19: executor.Execute<0x19>(state, bus); break;
    case 0x1A: executor.Execute<0x1A>(state, bus); break;
    case 0x1B: executor.Execute<0x1B>(state, bus); break;
    case 0x1C: executor.Execute<0x1C>(state, bus); break;
    case 0x1D: executor.Execute<0x1D>(state, bus); break;
    case 0x1E: executor.Execute<0x1E>(state, bus); break;
    case 0x1F: executor.Execute<0x1F>(state, bus); break;
    case 0x20: executor.Execute<0x20>(state, bus); break;
    case 0x21: executor.Execute<0x21>(state, bus); break;
    case 0x22: executor.Execute<0x22>(state, bus); break;
    case 0x23: executor.Execute<0x23>(state, bus); break;
    case 0x24: executor.Execute<0x24>(state, bus); break;
    case 0x25: executor.Execute<0x25>(state, bus); break;
    case 0x26: executor.Execute<0x26>(state, bus); break;
    case 0x27: executor.Execute<0x27>(state, bus); break;
    case 0x28: executor.Execute<0x28>(state, bus); break;
    case 0x29: executor.Execute<0x29>(state, bus); break;
    case 0x2A: executor.Execute<0x2A>(state, bus); break;
    case 0x2B: executor.Execute<0x2B>(state, bus); break;
    case 0x2C: executor.Execute<0x2C>(state, bus); break;
    case 0x2D: executor.Execute<0x2D>(state, bus); break;
    case 0x2E: executor.Execute<0x2E>(state, bus); break;
    case 0x2F: executor.Execute<0x2F>(state, bus); break;
    case 0x30: executor.Execute<0x30>(state, bus); break;
    case 0x31: executor.Execute<0x31>(state, bus); break;
    case 0x32: executor.Execute<0x32>(state, bus); break;
    case 0x33: executor.Execute<0x33>(state, bus); break;
    case 0x34: executor.Execute<0x34>(state, bus); break;
    case 0x35: executor.Execute<0x35>(state, bus); break;
    case 0x36: executor.Execute<0x36>(state, bus); break;
    case 0x37: executor.Execute<0x37>(state, bus); break;
    case 0x38: executor.Execute<0x38>(state, bus); break;
    case 0x39: executor.Execute<0x39>(state, bus); break;
    case 0x3A: executor.Execute<0x3A>(state, bus); break;
    case 0x3B: executor.Execute<0x3B>(state, bus); break;
    case 0x3C: executor.Execute<0x3C>(state, bus); break;
    case 0x3D: executor.Execute<0x3D>(state, bus); break;
    case 0x3E: executor.Execute<0x3E>(state, bus); break;
    case 0x3F: executor.Execute<0x3F>(state, bus); break;
    case 0x40: executor.Execute<0x40>(state, bus); break;
    case 0x41: executor.Execute<0x41>(state, bus); break;
    case 0x42: executor.Execute<0x42>(state, bus); break;
    case 0x43: executor.Execute<0x43>(state, bus); break;
    case 0x44: executor.Execute<0x44>(state, bus); break;
    case 0x45: executor.Execute<0x45>(state, bus); break;
    case 0x46: executor.Execute<0x46>(state, bus); break;
    case 0x47: executor.Execute<0x47>(state, bus); break;
    case 0x48: executor.Execute<0x48>(state, bus); break;
    case 0x49: executor.Execute<0x49>(state, bus); break;
    case 0x4A: executor.Execute<0x4A>(state, bus); break;
    case 0x4B: executor.Execute<0x4B>(state, bus); break;
    case 0x4C: executor.Execute<0x4C>(state, bus); break;
    case 0x4D: executor.Execute<0x4D>(state, bus); break;
    case 0x4E: executor.Execute<0x4E>(state, bus); break;
    case 0x4F: executor.Execute<0x4F>(state, bus); break;
    case 0x50: executor.Execute<0x50>(state, bus); break;
    case 0x51: executor.Execute<0x51>(state, bus); break;
    case 0x52: executor.Execute<0x52>(state, bus); break;
    case 0x53: executor.Execute<0x53>(state, bus); break;
    case 0x54: executor.Execute<0x54>(state, bus); break;
    case 0x55: executor.Execute<0x55>(state, bus); break;
    case 0x56: executor.Execute<0x56>(state, bus); break;
    case 0x57: executor.Execute<0x57>(state, bus); break;
    case 0x58: executor.Execute<0x58>(state, bus); break;
    case 0x59: executor.Execute<0x59>(state, bus); break;
    case 0x5A: executor.Execute<0x5A>(state, bus); break;
    case 0x5B: executor.Execute<0x5B>(state, bus); break;
    case 0x5C: executor.Execute<0x5C>(state, bus); break;
    case 0x5D: executor.Execute<0x5D>(state, bus); break;
    case 0x5E: executor.Execute<0x5E>(state, bus); break;
    case 0x5F: executor.Execute<0x5F>(state, bus); break;
    case 0x60: executor.Execute<0x60>(state, bus); break;
    case 0x61: executor.Execute<0x61>(state, bus); break;
    case 0x62: executor.Execute<0x62>(state, bus); break;
    case 0x63: executor.Execute<0x63>(state, bus); break;
    case 0x64: executor.Execute<0x64>(state, bus); break;
    case 0x65: executor.Execute<0x65>(state, bus); break;
    case 0x66: executor.Execute<0x66>(state, bus); break;
    case 0x67: executor.Execute<0x67>(state, bus); break;
    case 0x68: executor.Execute<0x68>(state, bus); break;
    case 0x69: executor.Execute<0x69>(state, bus); break;
    case 0x6A: executor.Execute<0x6A>(state, bus); break;
    case 0x6B: executor.Execute<0x6B>(state, bus); break;
    case 0x6C: executor.Execute<0x6C>(state, bus); break;
    case 0x6D: executor.Execute<0x6D>(state, bus); break;
    case 0x6E: executor.Execute<0x6E>(state, bus); break;
    case 0x6F: executor.Execute<0x6F>(state, bus); break;
    case 0x70: executor.Execute<0x70>(state, bus); break;
    case 0x71: executor.Execute<0x71>(state, bus); break;
    case 0x72: executor.Execute<0x72>(state, bus); break;
    case 0x73: executor.Execute<0x73>(state, bus); break;
    case 0x74: executor.Execute<0x74>(state, bus); break;
    case 0x75: executor.Execute<0x75>(state, bus); break;
    case 0x76: executor.Execute<0x76>(state, bus); break;
    case 0x77: executor.Execute<0x77>(state, bus); break;
    case 0x78: executor.Execute<0x78>(state, bus); break;
    case 0x79: executor.Execute<0x79>(state, bus); break;
    case 0x7A: executor.Execute<0x7A>(state, bus); break;
    case 0x7B: executor.Execute<0x7B>(state, bus); break;
    case 0x7C: executor.Execute<0x7C>(state, bus); break;
    case 0x7D: executor.Execute<0x7D>(state, bus); break;
    case 0x7E: executor.Execute<0x7E>(state, bus); break;
    case 0x7F: executor.Execute<0x7F>(state, bus); break;
    case 0x80: executor.Execute<0x80>(state, bus); break;
    case 0x81: executor.Execute<0x81>(state, bus); break;
    case 0x82: executor.Execute<0x82>(state, bus); break;
    case 0x83: executor.Execute<0x83>(state, bus); break;
    case 0x84: executor.Execute<0x84>(state, bus); break;
    case 0x85: executor.Execute<0x85>(state, bus); break;
    case 0x86: executor.Execute<0x86>(state, bus); break;
    case 0x87: executor.Execute<0x87>(state, bus); break;
    case 0x88: executor.Execute<0x88>(state, bus); break;
    case 0x89: executor.Execute<0x89>(state, bus); break;
    case 0x8A: executor.Execute<0x8A>(state, bus); break;
    case 0x8B: executor.Execute<0x8B>(state, bus); break;
    case 0x8C: executor.Execute<0x8C>(state, bus); break;
    case 0x8D: executor.Execute<0x8D>(state, bus); break;
    case 0x8E: executor.Execute<0x8E>(state, bus); break;
    case 0x8F: executor.Execute<0x8F>(state, bus); break;
    case 0x90: executor.Execute<0x90>(state, bus); break;
    case 0x91: executor.Execute<0x91>(state, bus); break;
    case 0x92: executor.Execute<0x92>(state, bus); break;
    case 0x93: executor.Execute<0x93>(state, bus); break;
    case 0x94: executor.Execute<0x94>(state, bus); break;
    case 0x95: executor.Execute<0x95>(state, bus); break;
    case 0x96: executor.Execute<0x96>(state, bus); break;
    case 0x97: executor.Execute<0x97>(state, bus); break;
    case 0x98: executor.Execute<0x98>(state, bus); break;
    case 0x99: executor.Execute<0x99>(state, bus); break;
    case 0x9A: executor.Execute<0x9A>(state, bus); break;
    case 0x9B: executor.Execute<0x9B>(state, bus); break;
    case 0x9C: executor.Execute<0x9C>(state, bus); break;
    case 0x9D: executor.Execute<0x9D>(state, bus); break;
    case 0x9E: executor.Execute<0x9E>(state, bus); break;
    case 0x9F: executor.Execute<0x9F>(state, bus); break;
    case 0xA0: executor.Execute<0xA0>(state, bus); break;
    case 0xA1: executor.Execute<0xA1>(state, bus); break;
    case 0xA2: executor.Execute<0xA2>(state, bus); break;
    case 0xA3: executor.Execute<0xA3>(state, bus); break;
    case 0xA4: executor.Execute<0xA4>(state, bus); break;
    case 0xA5: executor.Execute<0xA5>(state, bus); break;
    case 0xA6: executor.Execute<0xA6>(state, bus); break;
    case 0xA7: executor.Execute<0xA7>(state, bus); break;
    case 0xA8: executor.Execute<0xA8>(state, bus); break;
    case 0xA9: executor.Execute<0xA9>(state, bus); break;
    case 0xAA: executor.Execute<0xAA>(state, bus); break;
    case 0xAB: executor.Execute<0xAB>(state, bus); break;
    case 0xAC: executor.Execute<0xAC>(state, bus); break;
    case 0xAD: executor.Execute<0xAD>(state, bus); break;
    case 0xAE: executor.Execute<0xAE>(state, bus); break;
    case 0xAF: executor.Execute<0xAF>(state, bus); break;
    case 0xB0: executor.Execute<0xB0>(state, bus); break;
    case 0xB1: executor.Execute<0xB1>(state, bus); break;
    case 0xB2: executor.Execute<0xB2>(state, bus); break;
    case 0xB3: executor.Execute<0xB3>(state, bus); break;
    case 0xB4: executor.Execute<0xB4>(state, bus); break;
    case 0xB5: executor.Execute<0xB5>(state, bus); break;
    case 0xB6: executor.Execute<0xB6>(state, bus); break;
    case 0xB7: executor.Execute<0xB7>(state, bus); break;
    case 0xB8: executor.Execute<0xB8>(state, bus); break;
    case 0xB9: executor.Execute<0xB9>(state, bus); break;
    case 0xBA: executor.Execute<0xBA>(state, bus); break;
    case 0xBB: executor.Execute<0xBB>(state, bus); break;
    case 0xBC: executor.Execute<0xBC>(state, bus); break;
    case 0xBD: executor.Execute<0xBD>(state, bus); break;
    case 0xBE: executor.Execute<0xBE>(state, bus); break;
    case 0xBF: executor.Execute<0xBF>(state, bus); break;
    case 0xC0: executor.Execute<0xC0>(state, bus); break;
    case 0xC1: executor.Execute<0xC1>(state, bus); break;
    case 0xC2: executor.Execute<0xC2>(state, bus); break;
    case 0xC3: executor.Execute<0xC3>(state, bus); break;
    case 0xC4: executor.Execute<0xC4>(state, bus); break;
    case 0xC5: executor.Execute<0xC5>(state, bus); break;
    case 0xC6: executor.Execute<0xC6>(state, bus); break;
    case 0xC7: executor.Execute<0xC7>(state, bus); break;
    case 0xC8: executor.Execute<0xC8>(state, bus); break;
    case 0xC9: executor.Execute<0xC9>(state, bus); break;
    case 0xCA: executor.Execute<0xCA>(state, bus); break;
    case 0xCB: executor.Execute<0xCB>(state, bus); break;
    case 0xCC: executor.Execute<0xCC>(state, bus); break;
    case 0xCD: executor.Execute<0xCD>(state, bus); break;
    case 0xCE: executor.Execute<0xCE>(state, bus); break;
    case 0xCF: executor.Execute<0xCF>(state, bus); break;
    case 0xD0: executor.Execute<0xD0>(state, bus); break;
    case 0xD1: executor.Execute<0xD1>(state, bus); break;
    case 0xD2: executor.Execute<0xD2>(state, bus); break;
    case 0xD3: executor.Execute<0xD3>(state, bus); break;
    case 0xD4: executor.Execute<0xD4>(state, bus); break;
    case 0xD5: executor.Execute<0xD5>(state, bus); break;
    case 0xD6: executor.Execute<0xD6>(state, bus); break;
    case 0xD7: executor.Execute<0xD7>(state, bus); break;
    case 0xD8: executor.Execute<0xD8>(state, bus); break;
    case 0xD9: executor.Execute<0xD9>(state, bus); break;
    case 0xDA: executor.Execute<0xDA>(state, bus); break;
    case 0xDB: executor.Execute<0xDB>(state, bus); break;
    case 0xDC: executor.Execute<0xDC>(state, bus); break;
    case 0xDD: executor.Execute<0xDD>(state, bus); break;
    case 0xDE: executor.Execute<0xDE>(state, bus); break;
    case 0xDF: executor.Execute<0xDF>(state, bus); break;
    case 0xE0: executor.Execute<0xE0>(state, bus); break;
    case 0xE1: executor.Execute<0xE1>(state, bus); break;
    case 0xE2: executor.Execute<0xE2>(state, bus); break;
    case 0xE3: executor.Execute<0xE3>(state, bus); break;
    case 0xE4: executor.Execute<0xE4>(state, bus); break;
    case 0xE5: executor.Execute<0xE5>(state, bus); break;
    case 0xE6: executor.Execute<0xE6>(state, bus); break;
    case 0xE7: executor.Execute<0xE7>(state, bus); break;
    case 0xE8: executor.Execute<0xE8>(state, bus); break;
    case 0xE9: executor.Execute<0xE9>(state, bus); break;
    case 0xEA: executor.Execute<0xEA>(state, bus); break;
    case 0xEB: executor.Execute<0xEB>(state, bus); break;
    case 0xEC: executor.Execute<0xEC>(state, bus); break;
    case 0xED: executor.Execute<0xED>(state, bus); break;
    case 0xEE: executor.Execute<0xEE>(state, bus); break;
    case 0xEF: executor.Execute<0xEF>(state, bus); break;
    case 0xF0: executor.Execute<0xF0>(state, bus); break;
    case 0xF1: executor.Execute<0xF1>(state, bus); break;
    case 0xF2: executor.Execute<0xF2>(state, bus); break;
    case 0xF3: executor.Execute<0xF3>(state, bus); break;
    case 0xF4: executor.Execute<0xF4>(state, bus); break;
    case 0xF5: executor.Execute<0xF5>(state, bus); break;
    case 0xF6: executor.Execute<0xF6>(state, bus); break;
    case 0xF7: executor.Execute<0xF7>(state, bus); break;
    case 0xF8: executor.Execute<0xF8>(state, bus); break;
    case 0xF9: executor.Execute<0xF9>(state, bus); break;
    case 0xFA: executor.Execute<0xFA>(state, bus); break;
    case 0xFB: executor.Execute<0xFB>(state, bus); break;
    case 0xFC: executor.Execute<0xFC>(state, bus); break;
    case 0xFD: executor.Execute<0xFD>(state, bus); break;
    case 0xFE: executor.Execute<0xFE>(state, bus); break;
    case 0xFF: executor.Execute<0xFF>(state, bus); break;
    default:
      throw NotImplemented(std::format("{}Unable to decode instruction {}{:#04x}{}\n", RED, BOLDRED, opcode, RESET));
  }
}
